{"ast":null,"code":"var _jsxFileName = \"E:\\\\YandexDisk\\\\\\u0425\\u0430\\u043A\\u0430\\u0442\\u043E\\u043D\\u044B\\\\\\u0426\\u0438\\u0444\\u0440\\u0432\\u043E\\u0439 \\u043F\\u0440\\u043E\\u0440\\u044B\\u0432 \\u041F\\u0435\\u0440\\u043C\\u044C\\\\my-react-app\\\\src\\\\components\\\\PhotoUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PhotoUpload() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [imageURL, setImageURL] = useState(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n\n    // Сохраняем выбранный файл в локальное хранилище\n    const reader = new FileReader();\n    reader.onload = e => {\n      const imageData = e.target.result;\n      localStorage.setItem('uploadedImage', imageData);\n      setImageURL(imageData);\n    };\n    reader.readAsDataURL(file);\n  };\n  const handleUpload = () => {\n    // Здесь вы можете отправить выбранный файл на сервер с использованием Axios или другой библиотеки\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0444\\u043E\\u0442\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), imageURL && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageURL,\n      alt: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(PhotoUpload, \"8ENwOUrLSTrz9Dwj+O8QpH5c8H0=\");\n_c = PhotoUpload;\nexport default PhotoUpload;\nvar _c;\n$RefreshReg$(_c, \"PhotoUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PhotoUpload","_s","selectedFile","setSelectedFile","imageURL","setImageURL","handleFileChange","event","file","target","files","reader","FileReader","onload","e","imageData","result","localStorage","setItem","readAsDataURL","handleUpload","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["E:/YandexDisk/Хакатоны/Цифрвой прорыв Пермь/my-react-app/src/components/PhotoUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction PhotoUpload() {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imageURL, setImageURL] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n\r\n    // Сохраняем выбранный файл в локальное хранилище\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const imageData = e.target.result;\r\n      localStorage.setItem('uploadedImage', imageData);\r\n      setImageURL(imageData);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    // Здесь вы можете отправить выбранный файл на сервер с использованием Axios или другой библиотеки\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Загрузить фото</button>\r\n      {imageURL && <img src={imageURL} alt=\"Загруженное изображение\" />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PhotoUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClCP,eAAe,CAACK,IAAI,CAAC;;IAErB;IACA,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;MACrB,MAAMC,SAAS,GAAGD,CAAC,CAACL,MAAM,CAACO,MAAM;MACjCC,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEH,SAAS,CAAC;MAChDV,WAAW,CAACU,SAAS,CAAC;IACxB,CAAC;IACDJ,MAAM,CAACQ,aAAa,CAACX,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzB;EAAA,CACD;EAED,oBACErB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAOuB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAElB;IAAiB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClE7B,OAAA;MAAQ8B,OAAO,EAAET,YAAa;MAAAC,QAAA,EAAC;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACrDxB,QAAQ,iBAAIL,OAAA;MAAK+B,GAAG,EAAE1B,QAAS;MAAC2B,GAAG,EAAC;IAAyB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV;AAAC3B,EAAA,CA7BQD,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AA+BpB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}